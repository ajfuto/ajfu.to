{
    "componentChunkName": "component---src-templates-post-template-js",
    "path": "/change-default-python-version",
    "result": {"data":{"site":{"siteMetadata":{"title":"ajfu.to","siteUrl":"https://ajfu.to"}},"mdx":{"id":"7a37c1ac-208a-5638-a89f-4787a66830db","timeToRead":1,"excerpt":"Checking your current Python version To check your current Python version, run: Alternatively, you can run: In most instances,  python  maps to a Python 2.Xâ€¦","fields":{"slug":"/change-default-python-version"},"frontmatter":{"title":"How to change default Python version","date":"July 27, 2022","description":"Changing your default versions for Python 2 and 3","image":null},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"How to change default Python version\",\n  \"date\": \"2022-07-27T02:35:59.946Z\",\n  \"description\": \"Changing your default versions for Python 2 and 3\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h3\", null, \"Checking your current Python version\"), mdx(\"p\", null, \"To check your current Python version, run:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"console\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-console\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-console\"\n  }, \"python3 --version\"))), mdx(\"p\", null, \"Alternatively, you can run:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-text\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-text\"\n  }, \"python --version\"))), mdx(\"p\", null, \"In most instances, \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"python\"), \" maps to a Python 2.X installation and \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"python3\"), \" maps to a Python 3.X version (as the name implies).\"), mdx(\"hr\", null), mdx(\"h3\", null, \"Changing your default python3 version\"), mdx(\"p\", null, \"To see the Python 3.X versions you have installed, run the following command:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"console\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-console\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-console\"\n  }, \"ls /usr/bin/python3*\"))), mdx(\"p\", null, \"We can use \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"update-alternatives\"), \" to change \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"python3\"), \" to run our desired version.\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"console\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-console\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-console\"\n  }, \"sudo update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.6 1\\nsudo update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.8 2\"))), mdx(\"p\", null, \"The number at the end of each line is the priority number. We can change the order of the priority through following the instructions after running:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"console\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-console\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-console\"\n  }, \"sudo update-alternatives --config python3\"))), mdx(\"hr\", null), mdx(\"h3\", null, \"Changing your default python version\"), mdx(\"p\", null, \"Similarly, we will use \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"update-alternatives\"), \" to change what \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"python\"), \" runs.\\nWe can run the following command to see all of our Python installations:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"console\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-console\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-console\"\n  }, \"ls /usr/bin/python*\"))), mdx(\"p\", null, \"We can follow a similar process as before by assigning Python versions different priorities.\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"console\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-console\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-console\"\n  }, \"sudo update-alternatives --install /usr/bin/python python /usr/bin/python2.7 1\\nsudo update-alternatives --install /usr/bin/python python /usr/bin/python3.6 2\"))), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Note\"), \": It is highly recommended that you keep \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"python\"), \" pointing to a Python 2.X version rather than a 3.X version. Some operating systems rely on \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"python\"), \" being a Python 2.X version and may break otherwise.\"));\n}\n;\nMDXContent.isMDXComponent = true;"},"previous":{"fields":{"slug":"/remove-untracted-git-files"},"frontmatter":{"title":"How to remove untracked git files"}},"next":{"fields":{"slug":"/homelab"},"frontmatter":{"title":"My Homelab Experience"}}},"pageContext":{"id":"7a37c1ac-208a-5638-a89f-4787a66830db","previousPostId":"1012c22c-87b4-56e2-a18b-bfd1669ee95c","nextPostId":"9a12b3da-f35e-52ba-96b3-d112e8e7b879"}},
    "staticQueryHashes": ["4061151221"]}